Start training
> /home/kwangrok/Downloads/VS_CODE/my_github/detr/engine.py(32)train_one_epoch()
-> for samples, targets in metric_logger.log_every(data_loader, print_freq, header):
> /home/kwangrok/Downloads/VS_CODE/my_github/detr/util/misc.py(224)log_every()
-> for obj in iterable:
> /home/kwangrok/Downloads/VS_CODE/my_github/detr/util/misc.py(239)log_every()
-> tmp = { key:self.meters[key].value for key in self.meters }
dict_keys(['lr', 'class_error', 'loss', 'loss_ce', 'loss_bbox', 'loss_giou', 'loss_ce_0', 'loss_bbox_0', 'loss_giou_0', 'loss_ce_1', 'loss_bbox_1', 'loss_giou_1', 'loss_ce_2', 'loss_bbox_2', 'loss_giou_2', 'loss_ce_3', 'loss_bbox_3', 'loss_giou_3', 'loss_ce_4', 'loss_bbox_4', 'loss_giou_4', 'loss_ce_unscaled', 'class_error_unscaled', 'loss_bbox_unscaled', 'loss_giou_unscaled', 'cardinality_error_unscaled', 'loss_ce_0_unscaled', 'loss_bbox_0_unscaled', 'loss_giou_0_unscaled', 'cardinality_error_0_unscaled', 'loss_ce_1_unscaled', 'loss_bbox_1_unscaled', 'loss_giou_1_unscaled', 'cardinality_error_1_unscaled', 'loss_ce_2_unscaled', 'loss_bbox_2_unscaled', 'loss_giou_2_unscaled', 'cardinality_error_2_unscaled', 'loss_ce_3_unscaled', 'loss_bbox_3_unscaled', 'loss_giou_3_unscaled', 'cardinality_error_3_unscaled', 'loss_ce_4_unscaled', 'loss_bbox_4_unscaled', 'loss_giou_4_unscaled', 'cardinality_error_4_unscaled'])
{'lr': 0.0001, 'class_error': 100.0, 'loss': 73.05149841308594, 'loss_ce': 4.567876815795898, 'loss_bbox': 5.346506118774414, 'loss_giou': 2.162555456161499, 'loss_ce_0': 4.616812705993652, 'loss_bbox_0': 5.182182312011719, 'loss_giou_0': 2.225154161453247, 'loss_ce_1': 4.673548698425293, 'loss_bbox_1': 5.282788276672363, 'loss_giou_1': 2.2010626792907715, 'loss_ce_2': 4.730642795562744, 'loss_bbox_2': 5.259518146514893, 'loss_giou_2': 2.1953155994415283, 'loss_ce_3': 4.8560662269592285, 'loss_bbox_3': 5.305447578430176, 'loss_giou_3': 2.1635708808898926, 'loss_ce_4': 4.821895599365234, 'loss_bbox_4': 5.304011344909668, 'loss_giou_4': 2.156548500061035, 'loss_ce_unscaled': 4.567876815795898, 'class_error_unscaled': 100.0, 'loss_bbox_unscaled': 1.0693012475967407, 'loss_giou_unscaled': 1.0812777280807495, 'cardinality_error_unscaled': 95.75, 'loss_ce_0_unscaled': 4.616812705993652, 'loss_bbox_0_unscaled': 1.0364364385604858, 'loss_giou_0_unscaled': 1.1125770807266235, 'cardinality_error_0_unscaled': 95.75, 'loss_ce_1_unscaled': 4.673548698425293, 'loss_bbox_1_unscaled': 1.0565576553344727, 'loss_giou_1_unscaled': 1.1005313396453857, 'cardinality_error_1_unscaled': 95.75, 'loss_ce_2_unscaled': 4.730642795562744, 'loss_bbox_2_unscaled': 1.0519036054611206, 'loss_giou_2_unscaled': 1.0976577997207642, 'cardinality_error_2_unscaled': 95.75, 'loss_ce_3_unscaled': 4.8560662269592285, 'loss_bbox_3_unscaled': 1.0610895156860352, 'loss_giou_3_unscaled': 1.0817854404449463, 'cardinality_error_3_unscaled': 95.75, 'loss_ce_4_unscaled': 4.821895599365234, 'loss_bbox_4_unscaled': 1.0608022212982178, 'loss_giou_4_unscaled': 1.0782742500305176, 'cardinality_error_4_unscaled': 95.75}
> /home/kwangrok/Downloads/VS_CODE/my_github/detr/util/misc.py(241)log_every()
-> breakpoint()
{'lr': 0.0001, 'class_error': 100.0, 'loss': 73.05149841308594, 'loss_ce': 4.567876815795898, 'loss_bbox': 5.346506118774414, 'loss_giou': 2.162555456161499, 'loss_ce_0': 4.616812705993652, 'loss_bbox_0': 5.182182312011719, 'loss_giou_0': 2.225154161453247, 'loss_ce_1': 4.673548698425293, 'loss_bbox_1': 5.282788276672363, 'loss_giou_1': 2.2010626792907715, 'loss_ce_2': 4.730642795562744, 'loss_bbox_2': 5.259518146514893, 'loss_giou_2': 2.1953155994415283, 'loss_ce_3': 4.8560662269592285, 'loss_bbox_3': 5.305447578430176, 'loss_giou_3': 2.1635708808898926, 'loss_ce_4': 4.821895599365234, 'loss_bbox_4': 5.304011344909668, 'loss_giou_4': 2.156548500061035, 'loss_ce_unscaled': 4.567876815795898, 'class_error_unscaled': 100.0, 'loss_bbox_unscaled': 1.0693012475967407, 'loss_giou_unscaled': 1.0812777280807495, 'cardinality_error_unscaled': 95.75, 'loss_ce_0_unscaled': 4.616812705993652, 'loss_bbox_0_unscaled': 1.0364364385604858, 'loss_giou_0_unscaled': 1.1125770807266235, 'cardinality_error_0_unscaled': 95.75, 'loss_ce_1_unscaled': 4.673548698425293, 'loss_bbox_1_unscaled': 1.0565576553344727, 'loss_giou_1_unscaled': 1.1005313396453857, 'cardinality_error_1_unscaled': 95.75, 'loss_ce_2_unscaled': 4.730642795562744, 'loss_bbox_2_unscaled': 1.0519036054611206, 'loss_giou_2_unscaled': 1.0976577997207642, 'cardinality_error_2_unscaled': 95.75, 'loss_ce_3_unscaled': 4.8560662269592285, 'loss_bbox_3_unscaled': 1.0610895156860352, 'loss_giou_3_unscaled': 1.0817854404449463, 'cardinality_error_3_unscaled': 95.75, 'loss_ce_4_unscaled': 4.821895599365234, 'loss_bbox_4_unscaled': 1.0608022212982178, 'loss_giou_4_unscaled': 1.0782742500305176, 'cardinality_error_4_unscaled': 95.75}
*** SyntaxError: unexpected EOF while parsing
dict_keys(['lr', 'class_error', 'loss', 'loss_ce', 'loss_bbox', 'loss_giou', 'loss_ce_0', 'loss_bbox_0', 'loss_giou_0', 'loss_ce_1', 'loss_bbox_1', 'loss_giou_1', 'loss_ce_2', 'loss_bbox_2', 'loss_giou_2', 'loss_ce_3', 'loss_bbox_3', 'loss_giou_3', 'loss_ce_4', 'loss_bbox_4', 'loss_giou_4', 'loss_ce_unscaled', 'class_error_unscaled', 'loss_bbox_unscaled', 'loss_giou_unscaled', 'cardinality_error_unscaled', 'loss_ce_0_unscaled', 'loss_bbox_0_unscaled', 'loss_giou_0_unscaled', 'cardinality_error_0_unscaled', 'loss_ce_1_unscaled', 'loss_bbox_1_unscaled', 'loss_giou_1_unscaled', 'cardinality_error_1_unscaled', 'loss_ce_2_unscaled', 'loss_bbox_2_unscaled', 'loss_giou_2_unscaled', 'cardinality_error_2_unscaled', 'loss_ce_3_unscaled', 'loss_bbox_3_unscaled', 'loss_giou_3_unscaled', 'cardinality_error_3_unscaled', 'loss_ce_4_unscaled', 'loss_bbox_4_unscaled', 'loss_giou_4_unscaled', 'cardinality_error_4_unscaled'])
Traceback (most recent call last):
  File "/home/kwangrok/Downloads/VS_CODE/my_github/detr/main.py", line 263, in <module>
    main(args)
  File "/home/kwangrok/Downloads/VS_CODE/my_github/detr/main.py", line 211, in main
    train_stats = train_one_epoch(
  File "/home/kwangrok/Downloads/VS_CODE/my_github/detr/engine.py", line 32, in train_one_epoch
    for samples, targets in metric_logger.log_every(data_loader, print_freq, header):
  File "/home/kwangrok/Downloads/VS_CODE/my_github/detr/util/misc.py", line 241, in log_every
  File "/home/kwangrok/Downloads/VS_CODE/my_github/detr/util/misc.py", line 241, in log_every
  File "/home/kwangrok/anaconda3/envs/mm_torch113/lib/python3.9/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/kwangrok/anaconda3/envs/mm_torch113/lib/python3.9/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit